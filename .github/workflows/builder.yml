name: builder-docker-image-build

on: 
  push: 

  release:
    types: [created]

jobs:
  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: add sshkey
        uses: webfactory/ssh-agent@v0.5.2
        with:
          ssh-private-key: ${{ secrets.SSHKEY }}
      - name: Set release tag
        id: release-tag
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: builder
        run: |
          sudo apt-get update  
          sudo apt install qemu-user-static g++-arm-linux-gnueabihf kpartx aria2 tree s3fs 
          sudo pip install requests
          mkdir images && sudo APIKEY=${{ secrets.APIKEY }} USERNAME=${{ secrets.USERNAME }} PATH=./node_modules/.bin:$PATH ./builder --noninteractive  

          echo "**************Start of utils.sh**************"
          #source .travis/utils.sh
          die() {
            echo "$1" >&2
            exit 1
          }

          release=$(git tag --points-at HEAD | tail -n2 2>/dev/null | sed -e 's/^release-//')

          echo ${{ steps.release-tag.outputs.tag }}
          release_is_number() {
            echo "$release" | grep -Eqx "[0-9]+"
          }
          image=$(find images/*.img | head -1) 
          [[ -n "$image" ]] || die "image not found"
          [[ -z "$release" ]] && die "No Release tag found; quitting" 
          name="treehouse-$release"
          mkdir -p build
          image_gz="build/$name.img.gz"
          image_sha1=$image_gz.sha1
          
          echo "**************Start of environment.sh**************"
          build_type="branch"
          image_dir="experiment/"
          if release_is_number; then 
            build_type="latest" 
            image_dir="" 
          fi
          experiment="$build_type"
          image_path="$image_dir$name.img.gz"

          echo "**************Start of compress.sh**************"

          if [[ ! -e "$image_gz" ]] || [[ "$image_gz" -ot "$image" ]]; then
            echo "Compressing image"
            gzip -c -9 < "$image" > "$image_gz"
          fi
          sync
          sha1sum "$image_gz" > "$image_sha1"
          sync

          echo "**************Start of upload.sh**************"
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "download.ole.org ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBK6diybdi0R/Iptq9qGSP/ZU5zaJ8XrfGSuGvmsVFGKdQAPJsS4GhRm4cq8ucAYoatz9gx/mgJBWgPV6JPbkxiU=" > ~/.ssh/known_hosts
          rsync -Pav "$image_gz" "$image_sha1" deploy@download.ole.org:/data/images/.rj/
          if release_is_number; then
            echo "Marking release as latest image"
            ssh deploy@download.ole.org:/data/images/.rj/ -c ":; cd /data/images; ln -sf $name.img.gz latest.img.gz; ln -sf $name.img.gz.sha1 latest.img.gz.sha1"
          fi
          echo "**************End of upload.sh**************"